/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Project;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author hp1
 */
public class Resolve extends javax.swing.JFrame {
   static int l,kl,i=1;
   Old_cust oc = new Old_cust();
   check ck1 = new check();
   String nm,id,dt;
    /**
     * Creates new form Resolve
     */
    public Resolve() {
        initComponents();
        t1.setEditable(false);
        t2.setEditable(false);
        ta.setEditable(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        t1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        t2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        b1 = new javax.swing.JRadioButton();
        b2 = new javax.swing.JRadioButton();
        b3 = new javax.swing.JRadioButton();
        b4 = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Name of Complainer ");

        jLabel2.setText("Complaint ID");

        ta.setColumns(20);
        ta.setRows(5);
        jScrollPane1.setViewportView(ta);

        jLabel3.setText("Complaint Detail");

        jButton2.setText("Find Unattended Complaints");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel4.setText("Status");

        jButton5.setText("Done");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("SET");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        buttonGroup1.add(b1);
        b1.setText("Recorded");

        buttonGroup1.add(b2);
        b2.setText("Processing");

        buttonGroup1.add(b3);
        b3.setText("Completed");

        buttonGroup1.add(b4);
        b4.setText("Bogus");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(t1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(74, 74, 74)
                        .addComponent(jScrollPane1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(b1))
                            .addComponent(jButton2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 145, Short.MAX_VALUE)
                                .addComponent(jButton6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton5))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(b2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(b4)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(t2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(b1)
                    .addComponent(b2)
                    .addComponent(b3)
                    .addComponent(b4))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton5)
                    .addComponent(jButton6))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        Main_page mp = new Main_page();
        mp.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
       //All the queries are resolved by their respective officers.
        //Here we set and update table's data.
        try {
            Connection con = (Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/comp","shibli","shibli");
            Statement st = (Statement)con.createStatement();
            if(l==1){
             if(b1.isSelected()==true){
             st.executeUpdate("update cmp set status ='Recorded' where status is NULL and categ = 1 and id = "+id+";");
            }
            if(b2.isSelected()==true){
             st.executeUpdate("update cmp set status ='Recorded' where status is NULL and categ = 1 and id = "+id+";");
            }
            if(b3.isSelected()==true){
               st.executeUpdate("update cmp set status ='Recorded' where status is NULL and categ = 1 and id = "+id+";");
            }
            if(b4.isSelected()==true){
             st.executeUpdate("update cmp set status ='Recorded' where status is NULL and categ = 1 and id = "+id+";");
             } 
            }
            else if(l==2){
               if(b1.isSelected()==true){
             st.executeUpdate("update cmp set status ='Recorded' where status is NULL and categ = 2 and id = "+id+";");
            }
            if(b2.isSelected()==true){
             st.executeUpdate("update cmp set status ='Processing' where status is NULL and categ = 2 and id = "+id+";");
            }
            if(b3.isSelected()==true){
               st.executeUpdate("update cmp set status ='Completed' where status is NULL and categ = 2 and id = "+id+";");
            }
            if(b4.isSelected()==true){
              st.executeUpdate("update cmp set status ='bogus' where status is NULL and categ = 2 and id = "+id+";");
             } 
            }
            else if(l==6){
               if(b1.isSelected()==true){
             st.executeUpdate("update cmp set status ='Recorded' where status is NULL and categ = 6 and id = "+id+";");
            }
            if(b2.isSelected()==true){
             st.executeUpdate("update cmp set status ='Recorded' where status is NULL and categ = 6 and id = "+id+";");
            }
            if(b3.isSelected()==true){
               st.executeUpdate("update cmp set status ='Recorded' where status is NULL and categ = 6 and id = "+id+";");
            }
            if(b4.isSelected()==true){
              st.executeUpdate("update cmp set status ='Recorded' where status is NULL and categ = 6 and id = "+id+";");
             } 
            }
            else if(l==5){
               if(b1.isSelected()==true){
             st.executeUpdate("update cmp set status ='Recorded' where status is NULL and categ = 5 and id = "+id+";");
            }
            if(b2.isSelected()==true){
             st.executeUpdate("update cmp set status ='Recorded' where status is NULL and categ = 5 and id = "+id+";");
            }
            if(b3.isSelected()==true){
               st.executeUpdate("update cmp set status ='Recorded' where status is NULL and categ = 5 and id = "+id+";");
            }
            if(b4.isSelected()==true){
              st.executeUpdate("update cmp set status ='Recorded' where status is NULL and categ = 5 and id = "+id+";");
             } 
            }
            else if(l==4){
               if(b1.isSelected()==true){
             st.executeUpdate("update cmp set status ='Recorded' where status is NULL and categ = 4 and id = "+id+";");
            }
            if(b2.isSelected()==true){
             st.executeUpdate("update cmp set status ='Recorded' where status is NULL and categ = 4 and id = "+id+";");
            }
            if(b3.isSelected()==true){
               st.executeUpdate("update cmp set status ='Recorded' where status is NULL and categ = 4 and id = "+id+";");
            }
            if(b4.isSelected()==true){
              st.executeUpdate("update cmp set status ='Recorded' where status is NULL and categ = 4 and id = "+id+";");
             } 
            }
            else if(l==3){
               if(b1.isSelected()==true){
             st.executeUpdate("update cmp set status ='Recorded' where status is NULL and categ = 3 and id = "+id+";");
            }
            if(b2.isSelected()==true){
             st.executeUpdate("update cmp set status ='Recorded' where status is NULL and categ = 3 and id = "+id+";");
            }
            if(b3.isSelected()==true){
               st.executeUpdate("update cmp set status ='Recorded' where status is NULL and categ = 3 and id = "+id+";");
            }
            if(b4.isSelected()==true){
              st.executeUpdate("update cmp set status ='Recorded' where status is NULL and categ = 3 and id = "+id+";");
             } 
            }
        } catch (SQLException ex) {
            Logger.getLogger(New_cust.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
Main_page mp = new Main_page();
//Here checking is done that no record exists which needs attention.
        try {
            Connection con = (Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/comp","shibli","shibli");
            Statement st = (Statement)con.createStatement();
            if(l==1){
                i=1;
                 ResultSet rs = st.executeQuery("Select * from cmp where status is NULL and categ =1;");
                 if(rs.first()==false){
                     JOptionPane.showMessageDialog(null,"No records Here.");
                     mp.setVisible(true);
                     this.setVisible(false);
                 }
                 else{
                 if(rs.next()==true){
                   nm = rs.getString("name");
                 id = rs.getString("id");
                 dt = rs.getString("detail");
                 t1.setText(nm);
                 t2.setText(id);
                 ta.setText(dt);  
                 }   
                 }
            }
            else if(l==2){
                i=4;
                 ResultSet rs = st.executeQuery("Select * from cmp where status is NULL and categ =2 ;");
                 if(rs.first()==false){
                     JOptionPane.showMessageDialog(null,"No records Here.");
                     mp.setVisible(true);
                     this.setVisible(false);
                 }
                 else{
                 if(rs.next()==true){
                   nm = rs.getString("name");
                 id = rs.getString("id");
                 dt = rs.getString("detail");
                 t1.setText(nm);
                 t2.setText(id);
                 ta.setText(dt);  
                 }   
                 }
            }
            if(l==3){
                i=1;
                 ResultSet rs = st.executeQuery("Select * from cmp where status is NULL and categ =3;");
                 if(rs.first()==false){
                     JOptionPane.showMessageDialog(null,"No records Here.");
                     mp.setVisible(true);
                     this.setVisible(false);
                 }
                 else{
                 if(rs.next()==true){
                   nm = rs.getString("name");
                 id = rs.getString("id");
                 dt = rs.getString("detail");
                 t1.setText(nm);
                 t2.setText(id);
                 ta.setText(dt);  
                 }   
                 }
            }
            if(l==4){
                i=1;
                 ResultSet rs = st.executeQuery("Select * from cmp where status is NULL and categ =4;");
                 if(rs.first()==false){
                     JOptionPane.showMessageDialog(null,"No records Here.");
                     mp.setVisible(true);
                     this.setVisible(false);
                 }
                 else{
                 if(rs.next()==true){
                   nm = rs.getString("name");
                 id = rs.getString("id");
                 dt = rs.getString("detail");
                 t1.setText(nm);
                 t2.setText(id);
                 ta.setText(dt);  
                 }   
                 }
            }
            if(l==5){
                i=1;
                 ResultSet rs = st.executeQuery("Select * from cmp where status is NULL and categ =5;");
                 if(rs.first()==false){
                     JOptionPane.showMessageDialog(null,"No records here.");
                     mp.setVisible(true);
                     this.setVisible(false);
                 }
                 else{
                 if(rs.next()==true){
                   nm = rs.getString("name");
                 id = rs.getString("id");
                 dt = rs.getString("detail");
                 t1.setText(nm);
                 t2.setText(id);
                 ta.setText(dt);  
                 }   
                 }
            }
            if(l==6){
                i=1;
                 ResultSet rs = st.executeQuery("Select * from cmp where status is NULL and categ =6;");
                 if(rs.first()==false){
                     JOptionPane.showMessageDialog(null,"No records here.");
                     mp.setVisible(true);
                     this.setVisible(false);
                 }
                 else{
                 if(rs.next()==true){
                   nm = rs.getString("name");
                 id = rs.getString("id");
                 dt = rs.getString("detail");
                 t1.setText(nm);
                 t2.setText(id);
                 ta.setText(dt);  
                 }   
                 }
            }
        } catch (SQLException ex) {
            Logger.getLogger(New_cust.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Resolve.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Resolve.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Resolve.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Resolve.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Resolve().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton b1;
    private javax.swing.JRadioButton b2;
    private javax.swing.JRadioButton b3;
    private javax.swing.JRadioButton b4;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField t1;
    private javax.swing.JTextField t2;
    private javax.swing.JTextArea ta;
    // End of variables declaration//GEN-END:variables
}
